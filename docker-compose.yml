version: "3.9"

services:

  proxy:
    container_name: proxy
    hostname: proxy
    ports:
      - 4999:8080
    build:
      context: ./ContosoOnline/
      dockerfile: ./Proxy/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ORDERS_API=http://orders:8080
      - STORE_UI=http://store:8080
    depends_on:
      - prometheus
      - zipkin
      - orders
      - store

  store:
    container_name: store
    hostname: store
    ports:
      - 5003:8080
    build:
      context: ./ContosoOnline/
      dockerfile: ./Store/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - prometheus
      - zipkin
      - orders
      - products

  orders:
    container_name: orders
    hostname: orders
    ports:
      - 5000:8080
    build:
      context: ./ContosoOnline/
      dockerfile: ./Orders/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - prometheus
      - zipkin
      
  products:
    container_name: products
    hostname: products
    ports:
      - 5001:8080
    build:
      context: ./ContosoOnline/
      dockerfile: ./Products/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - prometheus
      - zipkin

  orderprocessor:
    container_name: orderprocessor
    hostname: orderprocessor
    build:
      context: ./ContosoOnline/
      dockerfile: ./OrderProcessor/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - products
      - orders
      
  postgres:
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postuser
      POSTGRES_DB: orders

  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_AUTH_ANONYMOUS_ENABLED=true
    volumes:
      - ./grafana/datasource:/etc/grafana/provisioning/datasources
      - ./grafana/dashboard/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards

volumes:
  prom_data: